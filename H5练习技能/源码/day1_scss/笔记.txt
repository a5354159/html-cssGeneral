                     Sass
1.Sass并不是css的替代品，它只是让css变得更加高效、可维护 
2.永远不要去修改生成后的css 
3.部署到线上的是生成的css文件，不是sass文件
.sass.scss   sass引擎   开发css   部署

sass有两种可选的文件后缀.sass和.scss，两者的主要区别就是在书写格式上
.sass文件是缩进式的写法，对格式要求比较严谨，末尾不能有分号
.scss文件和css书写风格一样，根据个人习惯来书写

输出样式的风格可以有四种选择，默认为nested
 nested：嵌套缩进的css代码 
expanded：展开的多行css代码 
compact：简洁格式的css代码 
compressed：压缩后的css代码


2.变量
sass重要的一个特性就是变量，把经常用到的属性值和经常修改的值定义成变量，方便调用和修改。
定义变量以$开头
如果在字符串中引用变量，则需要将变量名写在#{}中
默认变量用来提供sass的默认值。它的含义是：如果这个变量被声明赋值了，那就用它声明的值，否则就用默认值，设置默认变量的方法也非常简单，只需在变量值后加上!default

嵌套 
嵌套是一个比较实用的功能，它不仅可以省去书写大量重复选择器的时间，还能够让代码显得更有条理、更易维护。
嵌套代码中的&表示父元素选择器。
css属性也可以嵌套(用的相对较少)

sass导入文件
css有一个不太常用的特性，即@import导入功能，它允许在一个css文件中导入其他css文件。然而，结果是只有执行到@import规则时，浏览器才会去下载其他css文件，这会导致页面样式加载特别慢，从而容易出现页面闪的问题。 sass也有@import导入规则，与css不同的是，sass中的@import规则会在生成css文件时，把相关的文件导入合并成一个文件，而无需浏览器去下载其他的文件。另外在被导入文件中定义的变量等也可以在导入文件中正常使用。

注释
sass支持原生css的注释格式/* 注释内容 */，同时也支持类似js中的单行注释// 注释内容。对于单行注释，sass会在生成的css文件中删除单行注释，只保留css原生的注释内容，

混合器mixin
sass中的混合器一般用来解决大段代码重复的问题。@mixin
在需要用到的地方我们可以通过@include来使用这个混合器：
带参数的混合器 
混合器不仅可以实现代码的重复利用，还可以传递参数，根据需要生成不同的css。这在跨浏览器的css3兼容方面尤为好用。
参数提供默认值

@mixin djg($w:100px,$p:6px,$col:#ccc(这里的变量都是局部变量只能用于在djg这个作用域下))
$cor:red(这个变量叫全局变量只要在定义变量下使用此变量都能调用到)
$cor:red !default(默认变量  优先级比较低)
$top:top;特殊变量 用插值的方式调用#{$top}
div{
	margin-#{$top}:10px;
}


继承@extend 
使用sass时，继承是一个很不错的减少css重复代码的功能。继承可以让一个选择器继承另一个选择器的所有样式，并联合声明。可以使用@extend语法来实现继承

占位选择器% 
占位选择器的优势在于：声明之后，如果不调用，则不会产生类似.text的多余css代码。占位选择器通过%标识来定义，也是通过@extend来调用
